<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.dobehub.reply.dao.ReplyMapper">
    <resultMap id="BaseResultMap" type="com.github.dobehub.reply.pojo.Reply">
        <id column="reply_id" property="replyId" jdbcType="CHAR"/>
        <result column="comment_id" property="commentId" jdbcType="CHAR"/>
        <association column="reply_id" select="selectComment" javaType="com.github.dobehub.comment.pojo.Comment"
                     property="comment">
            <id column="comment_id" property="commentId" jdbcType="CHAR"/>
            <result column="comment_at" property="commentAt" jdbcType="TIMESTAMP"/>
        </association>
        <association column="reply_id" select="selectUser" javaType="com.github.dobehub.user.pojo.User" property="user">
            <id column="client_id" jdbcType="CHAR" property="clientId"/>
            <result column="username" jdbcType="CHAR" property="username"/>
            <result column="email" jdbcType="CHAR" property="email"/>
            <result column="sex" jdbcType="CHAR" property="sex"/>
            <result column="introduce" property="introduce" jdbcType="CHAR"/>
            <result column="coin" jdbcType="INTEGER" property="coin"/>
            <result column="active" jdbcType="INTEGER" property="active"/>
            <result column="agree" jdbcType="INTEGER" property="agree"/>
            <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        </association>
        <association column="reply_id" select="selectToUser" javaType="com.github.dobehub.user.pojo.User"
                     property="toUser">
            <id column="client_id" jdbcType="CHAR" property="clientId"/>
            <result column="username" jdbcType="CHAR" property="username"/>
            <result column="email" jdbcType="CHAR" property="email"/>
            <result column="sex" jdbcType="CHAR" property="sex"/>
            <result column="introduce" property="introduce" jdbcType="CHAR"/>
            <result column="coin" jdbcType="INTEGER" property="coin"/>
            <result column="active" jdbcType="INTEGER" property="active"/>
            <result column="agree" jdbcType="INTEGER" property="agree"/>
            <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        </association>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.github.dobehub.reply.pojo.Reply" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    reply_id, comment_id, client_id, to_client_id, reply_at
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectUser" parameterType="java.lang.String" resultType="com.github.dobehub.user.pojo.User">
    select u.client_id as clientId, username, email, sex, introduce, coin, active, agree, u.created_at
    from users as u join replies as r on r.client_id = u.client_id
    where u.reply_id = #{reply_id,jdbcType=CHAR}
  </select>
    <select id="selectToUser" parameterType="java.lang.String" resultType="com.github.dobehub.user.pojo.User">
    select u.client_id as clientId, username, email, sex, introduce, coin, active, agree, u.created_at
    from users as u join replies as r on r.to_client_id = u.client_id
    where u.reply_id = #{reply_id,jdbcType=CHAR}
  </select>
    <select id="selectComment" parameterType="java.lang.String" resultType="com.github.dobehub.user.pojo.User">
    select comment_id,comment_at
    from comments as c join replies as r on r.comment_id = c.comment_id
    where c.reply_id = #{reply_id,jdbcType=CHAR}
  </select>

    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from replies
        where reply_id = #{replyId,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from replies
    where reply_id = #{replyId,jdbcType=CHAR}
  </delete>
    <insert id="insert" parameterType="com.github.dobehub.reply.pojo.Reply">
    insert into replies (reply_id, comment_id, client_id,
      to_client_id, reply_at, content
      )
    values (#{replyId,jdbcType=CHAR}, #{comment.commentId,jdbcType=CHAR}, #{user.clientId,jdbcType=CHAR},
      #{toUser.toClientId,jdbcType=CHAR}, #{replyAt,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.github.dobehub.reply.pojo.Reply">
        insert into replies
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="replyId != null">
                reply_id,
            </if>
            <if test="commentId != null">
                comment_id,
            </if>
            <if test="clientId != null">
                client_id,
            </if>
            <if test="toClientId != null">
                to_client_id,
            </if>
            <if test="replyAt != null">
                reply_at,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="replyId != null">
                #{replyId,jdbcType=CHAR},
            </if>
            <if test="commentId != null">
                #{comment.commentId,jdbcType=CHAR},
            </if>
            <if test="clientId != null">
                #{user.clientId,jdbcType=CHAR},
            </if>
            <if test="toClientId != null">
                #{toUser.toClientId,jdbcType=CHAR},
            </if>
            <if test="replyAt != null">
                #{replyAt,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.dobehub.reply.pojo.Reply">
        update replies
        <set>
            <if test="commentId != null">
                comment_id = #{comment.commentId,jdbcType=CHAR},
            </if>
            <if test="clientId != null">
                client_id = #{user.clientId,jdbcType=CHAR},
            </if>
            <if test="toClientId != null">
                to_client_id = #{toUser.toClientId,jdbcType=CHAR},
            </if>
            <if test="replyAt != null">
                reply_at = #{replyAt,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where reply_id = #{replyId,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.github.dobehub.reply.pojo.Reply">
    update replies
    set comment_id = #{comment.commentId,jdbcType=CHAR},
      client_id = #{user.clientId,jdbcType=CHAR},
      to_client_id = #{toUser.toClientId,jdbcType=CHAR},
      reply_at = #{replyAt,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where reply_id = #{replyId,jdbcType=CHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.github.dobehub.reply.pojo.Reply">
    update replies
    set comment_id = #{comment.commentId,jdbcType=CHAR},
      client_id = #{user.clientId,jdbcType=CHAR},
      to_client_id = #{toUser.toClientId,jdbcType=CHAR},
      reply_at = #{replyAt,jdbcType=TIMESTAMP}
    where reply_id = #{replyId,jdbcType=CHAR}
  </update>
</mapper>